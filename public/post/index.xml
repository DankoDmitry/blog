<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://dankodmitry.github.io/post/</link>
      <atom:link href="https://dankodmitry.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 04 Jun 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dankodmitry.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://dankodmitry.github.io/post/</link>
    </image>
    
    <item>
      <title>Git version control</title>
      <link>https://dankodmitry.github.io/post/versioning-git/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://dankodmitry.github.io/post/versioning-git/</guid>
      <description>&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;
&lt;p&gt;Git is a free and open source distributed version control system designed to handle projects of any size, from small to very large, quickly and efficiently.&lt;/p&gt;
&lt;p&gt;Git is easy to learn, takes up little space, and has lightning-fast performance. It outperforms SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.&lt;/p&gt;
&lt;h2 id=&#34;branch-and-merge&#34;&gt;Branch and merge&lt;/h2&gt;
&lt;p&gt;(This is what gives Git an advantage over other version control systems)&lt;/p&gt;
&lt;p&gt;The feature of Git that really sets it apart from almost all other SCMs is its branching model.&lt;/p&gt;
&lt;p&gt;Git allows and encourages multiple local branches, which can be completely independent of each other. Creating, merging and deleting these development lines takes seconds.&lt;/p&gt;
&lt;p&gt;This means you can do things like:&lt;/p&gt;
&lt;p&gt;Seamless context switching. Create a branch to try out the idea, commit a few times, go back to where you branched from, apply a patch, go back to where you&amp;rsquo;re experimenting and merge it.
Role-Based Codelines. Have a branch that always contains only what goes into production, another where you merge work into for testing, and a few smaller branches for day-to-day work.
Feature-based workflow. Create new branches for every new feature you work on so you can easily switch between them, then delete each branch when that feature is merged into your mainline.
Disposable Experiments. Create a branch for experimentation, realize that it won&amp;rsquo;t work, and just delete it by abandoning the work and no one else will see it (even if you&amp;rsquo;ve pushed other branches in the meantime).
branches&lt;/p&gt;
&lt;p&gt;Notably, when pushing to a remote repository, you don&amp;rsquo;t have to push all your branches. You can share just one of your branches, a few of them, or all of them. This generally allows people to try out new ideas without having to worry about what they need to plan, how and when they are going to combine them or share them with others.&lt;/p&gt;
&lt;p&gt;There are ways to do this with other systems, but the job is much more difficult and error prone. Git makes this process incredibly easy and changes the way most developers work when they learn it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Initialization system System V</title>
      <link>https://dankodmitry.github.io/post/system-init-sysv/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://dankodmitry.github.io/post/system-init-sysv/</guid>
      <description>&lt;h1 id=&#34;--what-is-it-and-why&#34;&gt;- What is it and why?&lt;/h1&gt;
&lt;p&gt;System V is a version of the Unix operating system released in 1983.&lt;/p&gt;
&lt;p&gt;The initialization system in UNIX and Linux is a set of programs for managing the formation of a working environment: a text / graphical working environment or a service node of a computer network. The traditional name for a main program is init. Her PID = 1.&lt;/p&gt;
&lt;p&gt;Init is the parent of all processes. Its main task is to create scripted processes from the /etc/inittab file. This file usually contains entries that tell init to spawn getty for each line that users can log in to. It also controls the offline processes required by any system. A runlevel is a programmatic configuration of a system that allows only a given group of processes to exist. The processes spawned by init at each of these runlevels are defined in the /etc/inittab file.&lt;/p&gt;
&lt;p&gt;Essentially, init organizes and maintains all user space, which also includes checking and mounting file systems, starting the necessary user services, and switching to user state when the system has finished booting up.&lt;/p&gt;
&lt;h1 id=&#34;--how-does-it-work&#34;&gt;- How does it work?&lt;/h1&gt;
&lt;p&gt;Init systems start daemons with scripts, with each script starting one daemon and each successive script waiting for the previous script to complete.&lt;/p&gt;
&lt;p&gt;A daemon is a process that runs in the background with no connection to a GUI or terminal. Daemons are typically started at system boot and remain operational until the system is shut down. In modern technical documentation, daemons are most commonly referred to as services.&lt;/p&gt;
&lt;h2 id=&#34;process-id-1&#34;&gt;Process ID 1&lt;/h2&gt;
&lt;p&gt;The bootloader transfers control of the system to the OS kernel. After a short period of time, the OS kernel starts the init system daemon. This init system daemon (/sbin/init) is the first daemon started within the system, so the corresponding process gets the process ID 1 (PID 1). The init system daemon never exits.&lt;/p&gt;
&lt;h2 id=&#34;configuration-options-in-the-etcinittab-file&#34;&gt;Configuration options in the /etc/inittab file&lt;/h2&gt;
&lt;p&gt;After the binary file /sbin/init is executed, the configuration file /etc/inittab is read first. In this file, the daemon will look for the value of the initdefault variable (equal to 3 in the example below).&lt;/p&gt;
&lt;h2 id=&#34;variable-initdefault&#34;&gt;Variable initdefault&lt;/h2&gt;
&lt;p&gt;The value of the initdefault variable specifies the default runlevel. On some Linux distributions, the /etc/inittab file contains a short description of runlevels similar to the following translated description from the corresponding Red Hat Enterprise Linux 4 distribution file.&lt;/p&gt;
&lt;p&gt;Execution level 0 corresponds to system shutdown. Runlevel 1 is used for troubleshooting because only the root user can log in, and only the console can log in. Runlevel 3 is typical for servers, while runlevel 5 is typical for desktop computers (those that log in to the system in graphical mode). With the exception of runlevels 0, 1, and 6, the various runlevels may differ depending on the distribution. For example, the Debian distribution and derivative Linux distributions at runlevels 2 and 5 have the ability to log in using a network connection and a GUI. Therefore, you should always refer to the correct description of your system&amp;rsquo;s runlevels.&lt;/p&gt;
&lt;h2 id=&#34;sysinit-script&#34;&gt;sysinit script&lt;/h2&gt;
&lt;p&gt;Script /etc/rc.d/rc.sysinit&lt;/p&gt;
&lt;p&gt;The following line in the /etc/inittab configuration file on Red Hat and derivative distributions looks like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;si::sysinit:/etc/rc.d/rc.sysinit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This entry means that regardless of the chosen runlevel, the init system will execute the /etc/rc.d/rc.sysinit script. This script initializes the hardware, sets some basic environment variables, populates the /etc/mtab file when mounting filesystems, mounts the swap partition, and performs other necessary actions.&lt;/p&gt;
&lt;p&gt;The egrep command above can be replaced with the similar grep command below:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;grep &amp;ldquo;^# Ini∥Sta∥Che&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;initialization-scripts&#34;&gt;Initialization scripts&lt;/h2&gt;
&lt;p&gt;The init daemon will continue reading the /etc/inittab configuration file and jump to the following section:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;l0:0:wait:/etc/rc.d/rc 0
l1:1:wait:/etc/rc.d/rc 1
l2:2:wait:/etc/rc.d/rc 2
l3:3:wait:/etc/rc.d/rc 3
l4:4:wait:/etc/rc.d/rc 4
l5:5:wait:/etc/rc.d/rc 5
l6:6:wait:/etc/rc.d/rc 6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The init daemon must run the init script with a single parameter that matches the runlevel. In fact, the fields in the configuration file /etc/inittab are separated by colons. The second field describes the execution level at which the command on this line should be executed. Thus, in both cases, only one of the seven commands is executed, depending on the current runlevel set using the initdefault variable.&lt;/p&gt;
&lt;h2 id=&#34;directories-for-storing-init-scripts&#34;&gt;Directories for storing init scripts&lt;/h2&gt;
&lt;p&gt;If you look at the contents of one of the /etc/rcX.d/ directories, you can find many scripts (or script references) whose names start with either the letter K or uppercase S.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[root@RHEL52 rc3.d]# ls -l | tail -4
lrwxrwxrwx 1 root root 19 окт 11  2008 S98haldaemon -&amp;gt; ../init.d/haldaemon
lrwxrwxrwx 1 root root 19 окт 11  2008 S99firstboot -&amp;gt; ../init.d/firstboot
lrwxrwxrwx 1 root root 11 янв 21 04:16 S99local -&amp;gt; ../rc.local
lrwxrwxrwx 1 root root 16 янв 21 04:17 S99smartd -&amp;gt; ../init.d/smartd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The /etc/rcX.d/ directories only contain links to scripts located in the /etc/init.d/ directory. Links make it possible to use scripts with distinct names. When you move to a new runlevel, all scripts whose names start with the letter K or uppercase S start executing after being sorted alphabetically by name. Scripts whose names begin with the letter K will be executed first with a single parameter, stop. The rest of the scripts whose names begin with the letter S will be executed with a single start parameter passed.&lt;/p&gt;
&lt;p&gt;All of these operations are performed by the /etc/rc.d/rc script on the Red Hat distribution and the /etc/init.d/rc script on the Debian distribution.&lt;/p&gt;
&lt;h2 id=&#34;mingetty-daemons&#34;&gt;mingetty daemons&lt;/h2&gt;
&lt;p&gt;Description of mingetty daemons in /etc/inittab configuration file&lt;/p&gt;
&lt;p&gt;Almost at the end of the /etc/inittab configuration file is a section describing the conditions for starting and restarting several mingetty daemons.&lt;/p&gt;
&lt;h3 id=&#34;run-gettys-in-standard-runlevels&#34;&gt;Run gettys in standard runlevels&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;1:2345:respawn:/sbin/mingetty tty1
2:2345:respawn:/sbin/mingetty tty2
3:2345:respawn:/sbin/mingetty tty3
4:2345:respawn:/sbin/mingetty tty4
5:2345:respawn:/sbin/mingetty tty5
6:2345:respawn:/sbin/mingetty tty6&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;mingetty-daemons-and-binlogin-executable&#34;&gt;Mingetty daemons and /bin/login executable&lt;/h3&gt;
&lt;p&gt;The /sbin/mingetty daemon prints a message to the virtual console and allows you to enter a user ID. It then executes the /bin/login binary, passing in the user ID entered. The /bin/login program checks if the user information is present in the /etc/passwd file and asks for a password (and also checks that it is correct). If the password is correct, the /bin/login program transfers control to the shell specified in the /etc/passwd file.&lt;/p&gt;
&lt;h4 id=&#34;what-are-the-features&#34;&gt;What are the features?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Writing service startup files in bash;&lt;/li&gt;
&lt;li&gt;Sequential start of services;&lt;/li&gt;
&lt;li&gt;Sort launch order using numbers in filenames;&lt;/li&gt;
&lt;li&gt;Commands to start, stop and check the status of services.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Week from May 30 to June 5</title>
      <link>https://dankodmitry.github.io/post/week-from-may-30-to-june-5/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://dankodmitry.github.io/post/week-from-may-30-to-june-5/</guid>
      <description>&lt;h2 id=&#34;first&#34;&gt;First&lt;/h2&gt;
&lt;p&gt;Several difficult control behind, I hope I do not have to rewrite. Getting ready for exams.&lt;/p&gt;
&lt;h2 id=&#34;second&#34;&gt;Second&lt;/h2&gt;
&lt;p&gt;In general, the week turned out to be quite eventful, not to say that there were many achievements, but at the same time, I was always busy somewhere or something.&lt;/p&gt;
&lt;h2 id=&#34;third&#34;&gt;Third&lt;/h2&gt;
&lt;p&gt;Well, we celebrated our birthday in a restaurant, the food is delicious, expensive and not enough.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming Languages</title>
      <link>https://dankodmitry.github.io/post/scientific-programming-languages/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      <guid>https://dankodmitry.github.io/post/scientific-programming-languages/</guid>
      <description>&lt;p&gt;#There are hundreds of programming languages ​​in the world today. Each of them has strengths and weaknesses. Let&amp;rsquo;s talk about the most famous and sought after.&lt;/p&gt;
&lt;p&gt;##bash
Unix shell scripting, created by Ken Thompson in the early 1970s, is closely related to the C programming language. Bash, an updated Unix shell, was first released in the late 80s and is still under active development. Bash is usually scripted for server configuration, so it is a good choice for working in modern cloud environments with containerized storage and microservices. Shell scripts are used quite often, so knowledge of this language is useful.&lt;/p&gt;
&lt;p&gt;Also worth noting is zsh, which is currently the default shell on macOS.&lt;/p&gt;
&lt;p&gt;Applications: Server administration, CLI tools, DevOps, virtualization.&lt;/p&gt;
&lt;p&gt;##COBOL
One of the oldest languages ​​still in use today was created by Grace Hopper in the late 1950s and was intended to standardize the development of large-scale business applications on computers. A brilliant concept that is still used today in cross-platform SDKs. An incredible 95% of ATM transactions go through COBOL systems, with many of these devices operating 24 hours a day, 365 days a year. Device vendors such as IBM develop more powerful COBOL machines but continue to maintain and upgrade existing systems due to the cost and risk of replacing them. COBOL isn&amp;rsquo;t going anywhere anytime soon. This is a good choice for those who want to work with clients from the financial sector.&lt;/p&gt;
&lt;p&gt;Applications: banking/finance, international corporations, governments.&lt;/p&gt;
&lt;p&gt;##C/C++
These languages ​​often occupy the top of various ratings - they are valued for their power and speed. C was created in the early 1970s by Dennis Ritchie, C++ was developed by Bjorn Stroustrup in 1985. Today, these two languages ​​underpin everything from operating systems and games to modern scientific computing and machine learning. C and C++ are well suited for demanding applications that value low-level hardware access and performance. Learning these languages ​​takes time and effort.&lt;/p&gt;
&lt;p&gt;Scope: OS / SDK development, embedded devices, game engines, science.&lt;/p&gt;
&lt;p&gt;Read also:
Which programming language to choose to learn and how to learn it quickly?
Popular, in demand, affordable: how to choose a programming language
Five programming languages ​​for beginners&lt;/p&gt;
&lt;p&gt;##C#
C#, released by Microsoft in 2000, was developed by Anders Hejlsberg as a cross-platform object-oriented programming language. It is now often used to develop business applications, APIs, games, and more. Due to its wide feature set, this language is suitable for graphics and other asynchronous programming tasks.&lt;/p&gt;
&lt;p&gt;Applications: corporate applications, software and user interface development, games, graphics.&lt;/p&gt;
&lt;p&gt;##Dart
A modern language developed by Google for building mobile, desktop, web and server applications. Its creator Lars Bak also came up with the JavaSript Engine V8. Dart resembles other modern object-oriented programming languages—C#, TypeScript, and Java—and provides a rich set of features suitable for defining complex interactions, asynchronous operations, animation, and other tasks.&lt;/p&gt;
&lt;p&gt;Applications: cross-platform applications, cloud services / enterprise systems, games, graphics.&lt;/p&gt;
&lt;p&gt;##Fortran
Fortran, developed at IBM in the 1950s by John Backus, is a general-purpose language that was created for scientific and engineering work. It is still widely used for these purposes, including benchmark testing of the world&amp;rsquo;s fastest supercomputers. It has also been applied in space and physics research and weather modeling.&lt;/p&gt;
&lt;p&gt;Applications: aerospace/defense, scientific computing, numerical analysis.&lt;/p&gt;
&lt;p&gt;##java
Java is a general-purpose OOP language developed in the 1990s by James Gosling at Sun (now owned by Oracle) and designed to be compiled into bytecode to run on the Java virtual machine. By 2020, this includes almost every kind of device, from TVs and game consoles to servers, phones and even kitchen appliances. The language is widely used in corporations and universities, which has made it popular among both novice programmers and experienced developers.&lt;/p&gt;
&lt;p&gt;Applications: enterprise applications, embedded systems, web services, games.&lt;/p&gt;
&lt;p&gt;##JavaScript
JavaScript was developed by Brandon Eich in the 1990s to add scripting to websites. Today it is a universal web interface language with powerful, standardized features that are supported by all major browsers. JavaScript conforms to the EcmaScript standard, which is updated every few years with new language specifications. In addition, JavaScript is often used to develop back-end services and APIs, mobile applications, games, and other software. This is an excellent choice for learning and further improvement.&lt;/p&gt;
&lt;p&gt;Applications: full-stack development, cloud services / container storage, games, utilities.&lt;/p&gt;
&lt;p&gt;##Julia
A modern high-level language designed for high-performance numerical processing and statistical analysis. Julia was developed in 2009 by Jeff Besanson, Stefan Karpinski, Viral B. Shah and Alan Edelman. It is one of four languages ​​that can achieve petaflops of supercomputing performance (along with C, C++, and Fortran). Popular with universities, governments and financial institutions.&lt;/p&gt;
&lt;p&gt;Applications: financial analysis, mathematical research, scientific computing.&lt;/p&gt;
&lt;p&gt;##kotlin
Designed to interact with Java, Kotlin is packed with functional programming and OOP features, including lambda expressions, operator overloading, and so on. In 2019, Google named Kotlin as the language of choice for Android development, so it&amp;rsquo;s definitely worth learning for those who plan to build Android apps and plugins for popular SDKs.&lt;/p&gt;
&lt;p&gt;Applications: Android applications, server-side development, and all areas where Java is used.&lt;/p&gt;
&lt;p&gt;##lisp
Lisp is a group of languages ​​related to the historical implementation of LISP, which was developed at MIT in the 1950s to describe programs in a mathematical way. The syntax in Lisp is based on s-expressions, which distinguishes it from most other languages, many of which are related to or influenced by C. Lisp was popular in early AI research and was widely used as a scripting language for CAD and other engineering applications because it treats code as data and allows language customization through macros, which distinguishes it from more static languages. Notable applications based on it include AutoLisp (a script for AutoCad) and Roomba. One of the languages ​​in the family, Clojure, is especially useful for building large scale business and web applications.&lt;/p&gt;
&lt;p&gt;Applications: artificial intelligence, robotics, scripting, language extensions, research, development.&lt;/p&gt;
&lt;p&gt;##lua
Lua was developed in 1993 by Roberto Jeruzalimski for embedding in other applications. It is now widely used as a scripting language for adding new features to programs. For example, it can be used to supplement the description of game logic in the development of video games or to expand the set of user functions in graphic applications.&lt;/p&gt;
&lt;p&gt;Applications: Software extensions, game logic, automation, electronics/Internet of things.&lt;/p&gt;
&lt;p&gt;##PowerShell
PowerShell was developed by Microsoft in 2006 to provide Unix-like command-line interface functionality on Windows. It was later released as open source and ported to macOS, CentOS and Ubuntu. PowerShell is widely used on systems that use Windows Server and other Microsoft technologies to make administration easier and reduce maintenance costs.&lt;/p&gt;
&lt;p&gt;Applications: Windows system administration, command line interface, scripts, maintenance.&lt;/p&gt;
&lt;p&gt;##Python
Python, introduced in 1991 by Guido van Rossum, was conceived as a highly readable language with OOP features, using functional paradigms to build clean and well-organized programs. Python is supported by major platforms and is used in a wide variety of fields, including science, data mining, artificial intelligence development, computer graphics for feature films, cloud computing, game development, and many others. Python is well established and will remain one of the most requested tools for a long time to come.&lt;/p&gt;
&lt;p&gt;Applications: artificial intelligence / machine learning, data mining, cloud services / web, media, scripts.&lt;/p&gt;
&lt;p&gt;##R
R was released in 1995 for statistical calculations and other complex mathematical operations related to data analysis and graphics. The Fortune 500 often uses R to perform complex risk analysis, customer trends, and other computationally intensive tasks. R is different from many statistics languages, and its s-expression-based syntax is reminiscent of Lisp. Although rarely used for other purposes, R is considered the standard in data analytics, especially for market forecasting or user trend analysis.&lt;/p&gt;
&lt;p&gt;Applications: data mining, predictive analytics, graphics.&lt;/p&gt;
&lt;p&gt;##Ruby
Ruby was developed by Yukihiro Matsumoto in 1995 as an object-oriented scripting language to make up for the lack of OOP features in other scripting programming languages ​​of the time. Features such as dynamic typing, inheritance, reflection, and operator overloading make it ideal for creating complex scripts and web server applications.&lt;/p&gt;
&lt;p&gt;Applications: complex scripts, package management, utilities, web servers.&lt;/p&gt;
&lt;p&gt;##rust
Rust is a multi-paradigm language designed to build large-scale parallel systems with high performance and reliability. Since 2016, Rust has been voted the most popular programming language in a StackOverflow poll every year. Being a system-level language similar to C++ and not requiring long processing times or having a virtual machine, Rust provides low-level access to hardware. This makes it ideal for developing operating systems, programs for microcontrollers and other software where hardware performance is critical.&lt;/p&gt;
&lt;p&gt;Applications: OS development, embedded applications, servers, tools, games.&lt;/p&gt;
&lt;p&gt;##SQL
SQL is a general purpose programming language, but it is a powerful domain-specific language for managing relational databases. Its applications, from Fortune 500 data warehouses to embedded SQLite, are widely used in desktop and mobile applications. Many positions in IT and development require at least a basic knowledge of SQL. Advanced skills allow the developer to create extremely secure and robust domain rules that are independent of the programming language or SDK used. High profile implementations include Microsoft SQL Server, Oracle Database, and PostgreSQL. Each of them has a unique extension of the SQL language and offers new features that go beyond the core SQL specification. Learning SQL does not take much time and will come in handy in many areas from analytics and data processing to IT management and software development.&lt;/p&gt;
&lt;p&gt;Applications: working with relational data, embedding data in applications.&lt;/p&gt;
&lt;p&gt;##Swift
Swift was released by Apple in 2014 as a replacement for Objective-C in their products (similar to how Kotlin replaced Java for Android). Swift retains some of the Objective-C features (such as dynamic dispatch) used in Apple product software, but features increased security and a modified syntax closer to C# or Java.&lt;/p&gt;
&lt;p&gt;Applications: creating applications for macOS, iOS, watchOS and so on.&lt;/p&gt;
&lt;p&gt;##typescript
TypeScript is an open source language from Microsoft designed to add OOP functionality to JavaScript and improve the usability of complex applications. TypeScript, introduced in 2012, is commonly used to build robust, scalable web apps, frameworks, and other programs, such as the popular VS Code editor.&lt;/p&gt;
&lt;p&gt;Applications: web interface, API development, games, scaling any JavaScript software.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;For a successful career in IT, you need to know at least several languages from this list. Each of them has its own strengths and weaknesses: it is best to take advantage of a particular environment and look for other tools for those areas where the system does not perform as well. If a language is not suitable for a particular task, find one that is more useful. There are many programming styles and dozens of design patterns for each of these languages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week from May 2 to May 8</title>
      <link>https://dankodmitry.github.io/post/week-from-may-2-to-may-8/</link>
      <pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate>
      <guid>https://dankodmitry.github.io/post/week-from-may-2-to-may-8/</guid>
      <description>&lt;h2 id=&#34;most-ordinary-week&#34;&gt;Most ordinary week&lt;/h2&gt;
&lt;p&gt;completely forgot of course about Edith and about the individual project Well, I think that this will not greatly affect the future assessment, at least I think I will go to 4&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week from May 23 to May 29</title>
      <link>https://dankodmitry.github.io/post/week-from-may-23-to-may-29/</link>
      <pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate>
      <guid>https://dankodmitry.github.io/post/week-from-may-23-to-may-29/</guid>
      <description>&lt;h2 id=&#34;first&#34;&gt;First&lt;/h2&gt;
&lt;p&gt;I finally fixed the computer, though I broke it. well But now I have Ubuntu for Windows and I can do lab work on a normal operating system.&lt;/p&gt;
&lt;h2 id=&#34;second&#34;&gt;Second&lt;/h2&gt;
&lt;p&gt;I finally figured out how to work heck danisco which is perfect but i figured it out and that&amp;rsquo;s good.&lt;/p&gt;
&lt;h2 id=&#34;third&#34;&gt;Third&lt;/h2&gt;
&lt;p&gt;Well, my birthday is on Saturday Cool, I congratulate myself on my own beautiful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Wowchemy, the website builder for Hugo</title>
      <link>https://dankodmitry.github.io/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://dankodmitry.github.io/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li&gt;
&lt;li&gt;The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong&gt;no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong&gt; and having &lt;strong&gt;flexibility to later add even deeper personalization with HTML and CSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li&gt;
&lt;/ol&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Create a new site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📚 &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Personalize your site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💬 &lt;a href=&#34;https://discord.gg/z8wNYzb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;Wowchemy community&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Hugo community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href=&#34;https://twitter.com/wowchemy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@wowchemy&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%23MadeWithWowchemy&amp;amp;src=typed_query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithWowchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💡 &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt; for &lt;em&gt;Wowchemy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;⬆️ &lt;strong&gt;Updating Wowchemy?&lt;/strong&gt; View the &lt;a href=&#34;https://wowchemy.com/docs/hugo-tutorials/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Tutorial&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowd-funded-open-source-software&#34;&gt;Crowd-funded open-source software&lt;/h2&gt;
&lt;p&gt;To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p&gt;
&lt;h3 id=&#34;-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans&#34;&gt;&lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;❤️ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ❤️&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a token of appreciation for sponsoring, you can &lt;strong&gt;unlock &lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these&lt;/a&gt; awesome rewards and extra features 🦄✨&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/wowchemy/hugo-academic-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic CLI&lt;/a&gt;:&lt;/strong&gt; Automatically import publications from BibTeX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://wowchemy.com/user-stories/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://wowchemy.com/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://wowchemy.com/docs/import/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://wowchemy.com/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 34+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Wowchemy and its templates come with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/customization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully customizable.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

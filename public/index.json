[{"authors":null,"categories":null,"content":"First-year student of the Russian University of Friendship of Peoples Applied mathematics and computer science. I love mathematics, sports, outdoor recreation and programming.\n  Download my resumé.\n","date":1654300800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1654300800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"First-year student of the Russian University of Friendship of Peoples Applied mathematics and computer science. I love mathematics, sports, outdoor recreation and programming.\n  Download my resumé.","tags":null,"title":"Dmitry Danko","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://dankodmitry.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Dmitry Danko"],"categories":["programming languages"],"content":"- What is it and why? System V is a version of the Unix operating system released in 1983.\nThe initialization system in UNIX and Linux is a set of programs for managing the formation of a working environment: a text / graphical working environment or a service node of a computer network. The traditional name for a main program is init. Her PID = 1.\nInit is the parent of all processes. Its main task is to create scripted processes from the /etc/inittab file. This file usually contains entries that tell init to spawn getty for each line that users can log in to. It also controls the offline processes required by any system. A runlevel is a programmatic configuration of a system that allows only a given group of processes to exist. The processes spawned by init at each of these runlevels are defined in the /etc/inittab file.\nEssentially, init organizes and maintains all user space, which also includes checking and mounting file systems, starting the necessary user services, and switching to user state when the system has finished booting up.\n- How does it work? Init systems start daemons with scripts, with each script starting one daemon and each successive script waiting for the previous script to complete.\nA daemon is a process that runs in the background with no connection to a GUI or terminal. Daemons are typically started at system boot and remain operational until the system is shut down. In modern technical documentation, daemons are most commonly referred to as services.\nProcess ID 1 The bootloader transfers control of the system to the OS kernel. After a short period of time, the OS kernel starts the init system daemon. This init system daemon (/sbin/init) is the first daemon started within the system, so the corresponding process gets the process ID 1 (PID 1). The init system daemon never exits.\nConfiguration options in the /etc/inittab file After the binary file /sbin/init is executed, the configuration file /etc/inittab is read first. In this file, the daemon will look for the value of the initdefault variable (equal to 3 in the example below).\nVariable initdefault The value of the initdefault variable specifies the default runlevel. On some Linux distributions, the /etc/inittab file contains a short description of runlevels similar to the following translated description from the corresponding Red Hat Enterprise Linux 4 distribution file.\nExecution level 0 corresponds to system shutdown. Runlevel 1 is used for troubleshooting because only the root user can log in, and only the console can log in. Runlevel 3 is typical for servers, while runlevel 5 is typical for desktop computers (those that log in to the system in graphical mode). With the exception of runlevels 0, 1, and 6, the various runlevels may differ depending on the distribution. For example, the Debian distribution and derivative Linux distributions at runlevels 2 and 5 have the ability to log in using a network connection and a GUI. Therefore, you should always refer to the correct description of your system’s runlevels.\nsysinit script Script /etc/rc.d/rc.sysinit\nThe following line in the /etc/inittab configuration file on Red Hat and derivative distributions looks like this:\n si::sysinit:/etc/rc.d/rc.sysinit\n This entry means that regardless of the chosen runlevel, the init system will execute the /etc/rc.d/rc.sysinit script. This script initializes the hardware, sets some basic environment variables, populates the /etc/mtab file when mounting filesystems, mounts the swap partition, and performs other necessary actions.\nThe egrep command above can be replaced with the similar grep command below:\n grep “^# Ini∥Sta∥Che”.\n Initialization scripts The init daemon will continue reading the /etc/inittab configuration file and jump to the following section:\n l0:0:wait:/etc/rc.d/rc 0 l1:1:wait:/etc/rc.d/rc 1 l2:2:wait:/etc/rc.d/rc 2 l3:3:wait:/etc/rc.d/rc 3 l4:4:wait:/etc/rc.d/rc 4 l5:5:wait:/etc/rc.d/rc 5 l6:6:wait:/etc/rc.d/rc 6\n The init daemon must run the init script with a single parameter that matches the runlevel. In fact, the fields in the configuration file /etc/inittab are separated by colons. The second field describes the execution level at which the command on this line should be executed. Thus, in both cases, only one of the seven commands is executed, depending on the current runlevel set using the initdefault variable.\nDirectories for storing init scripts If you look at the contents of one of the /etc/rcX.d/ directories, you can find many scripts (or script references) whose names start with either the letter K or uppercase S.\n [root@RHEL52 rc3.d]# ls -l | tail -4 lrwxrwxrwx 1 root root 19 окт 11 2008 S98haldaemon -\u0026gt; ../init.d/haldaemon lrwxrwxrwx 1 root root 19 окт 11 2008 S99firstboot -\u0026gt; ../init.d/firstboot lrwxrwxrwx 1 root root 11 янв 21 04:16 S99local -\u0026gt; ../rc.local lrwxrwxrwx 1 root root 16 янв 21 04:17 S99smartd -\u0026gt; ../init.d/smartd\n The /etc/rcX.d/ directories only contain links to scripts located in the /etc/init.d/ …","date":1654300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654300800,"objectID":"cbc2d285a352144a4136e9dcfad118c8","permalink":"https://dankodmitry.github.io/post/system-init-sysv/","publishdate":"2022-06-04T00:00:00Z","relpermalink":"/post/system-init-sysv/","section":"post","summary":"- What is it and why? System V is a version of the Unix operating system released in 1983.\nThe initialization system in UNIX and Linux is a set of programs for managing the formation of a working environment: a text / graphical working environment or a service node of a computer network.","tags":["Academic"],"title":"Initialization system System V","type":"post"},{"authors":["Dmitry Danko"],"categories":["Demo"],"content":"First Several difficult control behind, I hope I do not have to rewrite. Getting ready for exams.\nSecond In general, the week turned out to be quite eventful, not to say that there were many achievements, but at the same time, I was always busy somewhere or something.\nThird Well, we celebrated our birthday in a restaurant, the food is delicious, expensive and not enough.)\n","date":1654300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654300800,"objectID":"a3424214b18650d36f82c379f35f62a3","permalink":"https://dankodmitry.github.io/post/week-from-may-30-to-june-5/","publishdate":"2022-06-04T00:00:00Z","relpermalink":"/post/week-from-may-30-to-june-5/","section":"post","summary":"The most ordinary week.","tags":["Academic"],"title":"Week from May 30 to June 5","type":"post"},{"authors":["Dmitry Danko"],"categories":["programming languages"],"content":"#There are hundreds of programming languages ​​in the world today. Each of them has strengths and weaknesses. Let’s talk about the most famous and sought after.\n##bash Unix shell scripting, created by Ken Thompson in the early 1970s, is closely related to the C programming language. Bash, an updated Unix shell, was first released in the late 80s and is still under active development. Bash is usually scripted for server configuration, so it is a good choice for working in modern cloud environments with containerized storage and microservices. Shell scripts are used quite often, so knowledge of this language is useful.\nAlso worth noting is zsh, which is currently the default shell on macOS.\nApplications: Server administration, CLI tools, DevOps, virtualization.\n##COBOL One of the oldest languages ​​still in use today was created by Grace Hopper in the late 1950s and was intended to standardize the development of large-scale business applications on computers. A brilliant concept that is still used today in cross-platform SDKs. An incredible 95% of ATM transactions go through COBOL systems, with many of these devices operating 24 hours a day, 365 days a year. Device vendors such as IBM develop more powerful COBOL machines but continue to maintain and upgrade existing systems due to the cost and risk of replacing them. COBOL isn’t going anywhere anytime soon. This is a good choice for those who want to work with clients from the financial sector.\nApplications: banking/finance, international corporations, governments.\n##C/C++ These languages ​​often occupy the top of various ratings - they are valued for their power and speed. C was created in the early 1970s by Dennis Ritchie, C++ was developed by Bjorn Stroustrup in 1985. Today, these two languages ​​underpin everything from operating systems and games to modern scientific computing and machine learning. C and C++ are well suited for demanding applications that value low-level hardware access and performance. Learning these languages ​​takes time and effort.\nScope: OS / SDK development, embedded devices, game engines, science.\nRead also: Which programming language to choose to learn and how to learn it quickly? Popular, in demand, affordable: how to choose a programming language Five programming languages ​​for beginners\n##C# C#, released by Microsoft in 2000, was developed by Anders Hejlsberg as a cross-platform object-oriented programming language. It is now often used to develop business applications, APIs, games, and more. Due to its wide feature set, this language is suitable for graphics and other asynchronous programming tasks.\nApplications: corporate applications, software and user interface development, games, graphics.\n##Dart A modern language developed by Google for building mobile, desktop, web and server applications. Its creator Lars Bak also came up with the JavaSript Engine V8. Dart resembles other modern object-oriented programming languages—C#, TypeScript, and Java—and provides a rich set of features suitable for defining complex interactions, asynchronous operations, animation, and other tasks.\nApplications: cross-platform applications, cloud services / enterprise systems, games, graphics.\n##Fortran Fortran, developed at IBM in the 1950s by John Backus, is a general-purpose language that was created for scientific and engineering work. It is still widely used for these purposes, including benchmark testing of the world’s fastest supercomputers. It has also been applied in space and physics research and weather modeling.\nApplications: aerospace/defense, scientific computing, numerical analysis.\n##java Java is a general-purpose OOP language developed in the 1990s by James Gosling at Sun (now owned by Oracle) and designed to be compiled into bytecode to run on the Java virtual machine. By 2020, this includes almost every kind of device, from TVs and game consoles to servers, phones and even kitchen appliances. The language is widely used in corporations and universities, which has made it popular among both novice programmers and experienced developers.\nApplications: enterprise applications, embedded systems, web services, games.\n##JavaScript JavaScript was developed by Brandon Eich in the 1990s to add scripting to websites. Today it is a universal web interface language with powerful, standardized features that are supported by all major browsers. JavaScript conforms to the EcmaScript standard, which is updated every few years with new language specifications. In addition, JavaScript is often used to develop back-end services and APIs, mobile applications, games, and other software. This is an excellent choice for learning and further improvement.\nApplications: full-stack development, cloud services / container storage, games, utilities.\n##Julia A modern high-level language designed for high-performance numerical processing and statistical analysis. Julia was developed in 2009 by Jeff Besanson, Stefan Karpinski, Viral B. Shah and Alan Edelman. …","date":1653696000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653696000,"objectID":"ec130b5fc7fd0b86f96cc888e20733d7","permalink":"https://dankodmitry.github.io/post/scientific-programming-languages/","publishdate":"2022-05-28T00:00:00Z","relpermalink":"/post/scientific-programming-languages/","section":"post","summary":"Here we will talk about programming languages, we will analyze the top 20 in our opinion.","tags":["Academic"],"title":"Programming Languages","type":"post"},{"authors":null,"categories":null,"content":"Well, the task has been issued, the signatures have been signed, it’s time to do it. Your site-portfolio-resume, it’s cool. Imagine: You go to an interview in a large company and you are asked about your skills, which are briefly listed in the resume. Like what, how, where. And instead of talking for a long time about your achievements and experience, you simply send a link to this site, your site, where everything is detailed (with pictures, of course).\nWell, the task has been issued, the signatures have been signed, it’s time to do it. Your site-portfolio-resume, it’s cool. Imagine: You go to an interview in a large company and you are asked about your skills, which are briefly listed in the resume. Like what, how, where. And instead of talking for a long time about your achievements and experience, you simply send a link to this site, your site, where everything is detailed (with pictures, of course).\n","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"41296aa410173ff10fa574beaf733dec","permalink":"https://dankodmitry.github.io/project/firstproject/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/project/firstproject/","section":"project","summary":"We make our website","tags":null,"title":"First Project","type":"project"},{"authors":["Dmitry Danko"],"categories":["Demo"],"content":"First I finally fixed the computer, though I broke it. well But now I have Ubuntu for Windows and I can do lab work on a normal operating system.\nSecond I finally figured out how to work heck danisco which is perfect but i figured it out and that’s good.\nThird Well, my birthday is on Saturday Cool, I congratulate myself on my own beautiful.\n","date":1653523200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653523200,"objectID":"1c50b897e63fb495daa1fdf043320dad","permalink":"https://dankodmitry.github.io/post/week-from-may-23-to-may-29/","publishdate":"2022-05-26T00:00:00Z","relpermalink":"/post/week-from-may-23-to-may-29/","section":"post","summary":"Most ordinary week.","tags":["Academic"],"title":"Week from May 23 to May 29","type":"post"},{"authors":["Dmitry Danko","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://dankodmitry.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://dankodmitry.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://dankodmitry.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Dmitry Danko","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://dankodmitry.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]